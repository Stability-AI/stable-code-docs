"use strict";(self.webpackChunkstable_code=self.webpackChunkstable_code||[]).push([[727],{1208:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(4848),r=n(8453);const a={sidebar_position:3,title:"Repositories QA"},s="Repositories QA",i={id:"tutorial-usage/repository_qa",title:"Repositories QA",description:"In this tutorial, we will show you how you can create a simple program",source:"@site/docs/tutorial-usage/repository_qa.mdx",sourceDirName:"tutorial-usage",slug:"/tutorial-usage/repository_qa",permalink:"/docs/tutorial-usage/repository_qa",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-usage/repository_qa.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Repositories QA"},sidebar:"tutorialSidebar",previous:{title:"VSCode Extension",permalink:"/docs/tutorial-usage/vscode-extension"},next:{title:"Tutorial - Finetuning Stable Code",permalink:"/docs/category/tutorial---finetuning-stable-code"}},l={},c=[];function u(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"repositories-qa",children:"Repositories QA"}),"\n",(0,o.jsx)(t.p,{children:"In this tutorial, we will show you how you can create a simple program\nusing Stable Code Instruct and Langchain to ask questions about a\nrepository."}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Note"}),": This tutorial has been adapted from Langchain\u2019s ",(0,o.jsx)(t.a,{href:"https://python.langchain.com/docs/use_cases/code_understanding",children:"official\ntutorial"}),"."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"First, let\u2019s go ahead and install our dependencies."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"%pip install -qU tree_sitter tree_sitter_languages sentence_transformers langchain langchain-community faiss-cpu GitPython\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Let\u2019s first go ahead and clone a repository to work with. We\u2019ll use the\n",(0,o.jsx)(t.code,{children:"langchain"})," repository as an example and GitPython to clone it."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'from git import Repo\n\nrepo_path = "/content/langchain"\nrepo = Repo.clone_from("https://github.com/langchain-ai/langchain", to_path=repo_path)\n'})}),"\n",(0,o.jsx)(t.p,{children:"Now that we have the repository, we need to get it into a form that we\ncan easily ask questions about. To do this we need to create a vector\ndatabase that will be used to match questions to the code in the\nrepository."}),"\n",(0,o.jsx)(t.p,{children:"We will be using tree-sitter for parsing the code in our repository to\nchunks that we will retrieve when we ask questions."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'from langchain_community.document_loaders.generic import GenericLoader\nfrom langchain_community.document_loaders.parsers import LanguageParser\nfrom langchain_text_splitters import Language, RecursiveCharacterTextSplitter\n\nloader = GenericLoader.from_filesystem(\n    repo_path,\n    glob="*",\n    suffixes=[".py"],\n    parser=LanguageParser(),\n)\ndocs = loader.load()\n\npython_splitter = RecursiveCharacterTextSplitter.from_language(\n    language=Language.PYTHON, chunk_size=2000, chunk_overlap=200 # Tune these parameters to your liking\n)\ntexts = python_splitter.split_documents(docs)\nlen(texts)\n'})}),"\n",(0,o.jsx)(t.p,{children:"With the chunks of code in hand, we can now vectorize them and store\nthem in a database. For vectorization, we will use the awesome MiniLM\nmodel from the sentence-tranformer library. And for the database, we\nwill use Faiss."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'from langchain_community.vectorstores import FAISS\nfrom langchain_community.embeddings import HuggingFaceEmbeddings\n\ndb = FAISS.from_documents(texts, HuggingFaceEmbeddings())\nretriever = db.as_retriever(\n    search_type="mmr",  # Also test "similarity"\n    search_kwargs={"k": 8},\n)\n'})}),"\n",(0,o.jsx)(t.p,{children:"Finally, we will use Ollama to serve our model and answer questions\nabout the repository."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'from langchain.chains import ConversationalRetrievalChain\nfrom langchain.memory import ConversationSummaryMemory\nfrom langchain_community.chat_models import ChatOllama\n\nllm = ChatOllama(model="stable-code:zephyr")\nmemory = ConversationSummaryMemory(\n    llm=llm, memory_key="chat_history", return_messages=True\n)\nqa = ConversationalRetrievalChain.from_llm(llm, retriever=retriever, memory=memory)\n\nquestion = "How can I initialize a ReAct agent?"\nresult = qa(question)\nresult["answer"]\n'})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(6540);const r={},a=o.createContext(r);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);